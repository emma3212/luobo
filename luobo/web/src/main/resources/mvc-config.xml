<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.pandawork.net/web/schema/mvc"
	xsi:schemaLocation="http://www.pandawork.net/web/schema/mvc	http://www.pandawork.net/web/schema/mvc/spring-mvc.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName" default-lazy-init="false" >

	<!--<mvc:annotation-driven />

    <mvc:interceptors>
        &lt;!&ndash; 先进行登录验证 &ndash;&gt;
        <bean class="com.luobo.web.interceptor.LoginInterceptor"  />
        &lt;!&ndash; 在验证授权登录，判断是否有权限进来 &ndash;&gt;
        <bean class="com.luobo.web.interceptor.AuthorInterceptor" />
        &lt;!&ndash; 模块菜单名称显示拦截器 &ndash;&gt;
        <bean class="com.luobo.web.interceptor.ModuleInterceptor" />
        &lt;!&ndash; 手机或者PC客户端拦截器 &ndash;&gt;
        &lt;!&ndash;<bean class="MobilePCInterceptor" />&ndash;&gt;
    </mvc:interceptors>

    <mvc:pandaworkDefault/>-->

    <!-- 解决/无法访问的问题 -->
    <!--<mvc:view-controller path="/" view-name="/login"/>-->


    <bean id="handlerAdapter" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" />

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id = "viewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="order" value="1"></property>
    </bean>

    <!-- SpringApplicationFilter -->
    <bean class="com.luobo.web.filter.SpringApplicationFilter" />

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver" />
    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="com.pandawork.core.web.spring.fileupload.PandaworkCommonsMultipartResolver"> 
        <!-- 指定所上传文件的总大小不能超过200KB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <!-- <property name="maxUploadSize" value="200000"/> -->
        <property name="maxInMemorySize" value="4096" />
    </bean>
    <!-- SpringMVC在超出上传文件限制时，会抛出org.springframework.web.multipart.MaxUploadSizeExceededException -->
    <!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/views/error_fileupload.jsp页面 -->
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">500</prop>
            </props>
        </property>
    </bean>
    
<!--    	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
        <property name="flowExecutor" ref="flowExecutor"/>
    </bean> -->

    <!--<mvc:view-controller path="/" view-name="welcome"/>-->
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving 
	up static resources in the ${webappRoot}/resources/ directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

</beans>